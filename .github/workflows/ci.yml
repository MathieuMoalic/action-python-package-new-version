jobs:
  tests:
    name: Integration tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - case: already_published_pypi
            path: tests/fixtures/already_published/pypi.org/pyproject.toml
            indexes: "pypi.org"
            expected_pypi_org: "true"

          - case: needs_publishing_pypi
            path: tests/fixtures/needs_publishing/pypi.org/pyproject.toml
            indexes: "pypi.org"
            expected_pypi_org: "false"

          - case: partial_multi_index
            path: tests/fixtures/already_published/test.pypi.org/pyproject.toml
            indexes: "pypi.org test.pypi.org"
            expected_pypi_org: "false"
            expected_test_pypi_org: "true"

          - case: needs_publishing_multi_index
            path: tests/fixtures/needs_publishing/test.pypi.org/pyproject.toml
            indexes: "pypi.org test.pypi.org"
            expected_pypi_org: "false"
            expected_test_pypi_org: "false"

    steps:
      - uses: actions/checkout@v4

      - name: Run version-check (${{ matrix.case }})
        id: check
        uses: ./
        with:
          path:    ${{ matrix.path }}
          indexes: ${{ matrix.indexes }}

      - name: Assertions
        shell: bash
        run: |
          set -euo pipefail
          echo "üîé Outputs:"
          echo "Version: ${{ steps.check.outputs.version }}"
          echo "JSON: ${{ steps.check.outputs.exists_map_json }}"

          # Save JSON to a file
          echo '${{ steps.check.outputs.exists_map_json }}' > exists.json

          check_json () {
            local index=$1 expected=$2
            [[ -z "$expected" ]] && return
            # Use jq to extract value
            local got=$(jq -r --arg idx "$index" '.[$idx]' exists.json)
            echo "üîé Expect $index = $expected (got $got)"
            if [[ "$got" != "$expected" ]]; then
              echo "::error::‚ùå $index mismatch"; exit 1
            fi
          }

          check_json "pypi.org"      "${{ matrix.expected_pypi_org || '' }}"
          check_json "test.pypi.org" "${{ matrix.expected_test_pypi_org || '' }}"

          if [[ -z "${{ steps.check.outputs.version }}" ]]; then
            echo "::error::‚ùå Version output is not set"; exit 1
          fi
          echo "‚úÖ Assertions passed for ${{ matrix.case }}"

